// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsweatherAPI.Data;

namespace NewsweatherAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210504211004_CitiesUpdate")]
    partial class CitiesUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewsweatherAPI.Models.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city_population")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NewsweatherAPI.Models.Weather", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.Property<string>("presure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("weather_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("weather_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wind_degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wind_direction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wind_speed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cityId")
                        .IsUnique();

                    b.ToTable("Wheate");
                });

            modelBuilder.Entity("NewsweatherAPI.Models.Weather", b =>
                {
                    b.HasOne("NewsweatherAPI.Models.City", "city")
                        .WithOne("weather")
                        .HasForeignKey("NewsweatherAPI.Models.Weather", "cityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("NewsweatherAPI.Models.City", b =>
                {
                    b.Navigation("weather");
                });
#pragma warning restore 612, 618
        }
    }
}
